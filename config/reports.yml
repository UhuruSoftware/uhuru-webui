---
reports:
  users:
    label: All Users
    query: select * from users
    users_column:
      name: guid
      label: User
  users_and_orgs:
    label: Organizations and Members
    query: 'select
           	organizations.name "Name",
           	array_agg(distinct organizations_managers.user_id) as "Owners",
           	array_agg(distinct organizations_auditors.user_id) as "Auditors",
           	array_agg(distinct organizations_billing_managers.user_id) as "Billing Managers",
           	organizations.created_at "Created",
           	organizations.id "ID"
           from
           	organizations
           left outer join
           	organizations_auditors on organizations.id = organizations_auditors.organization_id
           left outer join
           	organizations_billing_managers on organizations.id = organizations_billing_managers.organization_id
           left outer join
           	organizations_managers on organizations.id = organizations_managers.organization_id
           group by organizations.id, organizations.name, organizations.updated_at, organizations.created_at
           order by organizations.created_at'
    users_column: ["Auditors", "Billing Managers", "Owners"]
  users_count_history:
    label: User Count History
    query: select * from users
    users_column:
      name: guid
      label: User
  apps_custom_buildpack:
    label: Apps and Users
    query: "select
            	apps.created_at, apps.name, apps.buildpack, apps.not_deleted,
            	array_agg(routes.host || '.' || domains.name) as appurl,
            	array_agg(distinct spaces_auditors.user_id) as auditor,
            	array_agg(distinct spaces_developers.user_id) as developer,
            	array_agg(distinct spaces_managers.user_id) as manager
            from
            	apps
            join
            	apps_routes on apps.id = apps_routes.app_id
            join
            	routes on apps_routes.route_id = routes.id
            join
            	domains on routes.domain_id = domains.id
            left outer join
            	spaces_auditors on routes.space_id = spaces_auditors.space_id
            left outer join
            	spaces_developers on routes.space_id = spaces_developers.space_id
            left outer join
            	spaces_managers on routes.space_id = spaces_managers.space_id
            where apps.created_at >= '2013-09-20' AND apps.created_at < '2013-10-26' AND apps.buildpack != ''
            group by apps.created_at, apps.name, apps.buildpack, apps.not_deleted
            order by apps.created_at"
    users_column:
      name: guid
      label: User
  apps_detected_buildpack:
    label: Apps and Users
    query: "select
              	apps.created_at, apps.name, apps.detected_buildpack, apps.not_deleted,
              	array_agg(routes.host || '.' || domains.name) as appurl,
              	array_agg(distinct spaces_auditors.user_id) as auditor,
              	array_agg(distinct spaces_developers.user_id) as developer,
              	array_agg(distinct spaces_managers.user_id) as manager
              from
              	apps
              join
              	apps_routes on apps.id = apps_routes.app_id
              join
              	routes on apps_routes.route_id = routes.id
              join
              	domains on routes.domain_id = domains.id
              left outer join
              	spaces_auditors on routes.space_id = spaces_auditors.space_id
              left outer join
              	spaces_developers on routes.space_id = spaces_developers.space_id
              left outer join
              	spaces_managers on routes.space_id = spaces_managers.space_id
              where apps.created_at >= '2013-09-20' AND apps.created_at < '2013-10-26' AND apps.detected_buildpack != ''
              group by apps.created_at, apps.name, apps.detected_buildpack, apps.not_deleted
              order by apps.created_at"
    users_column:
      name: guid
      label: User
  services:
    label: Cumulative Usage
    query: "CREATE OR REPLACE FUNCTION do_cross_cursor(dimx_name varchar,
                    dimx_source varchar, dimy_name varchar,
                    dimy_source varchar, expr varchar)
                RETURNS refcursor AS $$
                DECLARE
                col_list text[] := '{}';
                query text;
                r RECORD;
                result refcursor := 'result';
                BEGIN
                FOR r IN EXECUTE 'SELECT DISTINCT '
                  || dimx_name || '::text AS val ' || dimx_source
                LOOP
                col_list := array_append(col_list, 'CASE ' || dimx_name
                 || ' WHEN ' || quote_literal(r.val) || ' THEN COUNT(' || expr
                 || ') ELSE 0 END AS ' || quote_ident(r.val) || '');
                END LOOP;
                query := 'SELECT ' || dimy_name || '::date as created, '
                 || array_to_string(col_list, ',')
                 || ', COUNT(' || expr || ') AS Total '
                 || dimy_source || ' GROUP BY ' || dimx_name || ', created ORDER BY created';
                OPEN result NO SCROLL FOR EXECUTE query;
                RETURN result;
                END;
                $$ LANGUAGE plpgsql STRICT;

                SELECT do_cross_cursor('buildpack', 'FROM apps','created_at',
                     'FROM apps a WHERE buildpack IS NOT NULL',
                     'id');
                FETCH ALL FROM result;"
    users_column:
      name: guid
      label: User
